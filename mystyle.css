/*Specify the doc type, language, relative paths, page title and meta information*/
<!DOCTYPE html>
<html lang="en-CA">
<head>
<title>CSS Template</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>

/*Here is where I style my text type for the whole document, I have put this same style in all my html, therefore this CSS is overriding*/
* {
  box-sizing: border-box;
}

body {
  font-family: monaco, monospace;
  margin: 0;
}

/*Style the header*/
.header {
  background-color: black;
  padding: 30px;
  text-align: center;
}

/*Styling the nav bar, to create a responsive nav bar. I sourced this from https://www.youtube.com/watch?v=At4B7A4GOPg, and changed the options suited for myself*/
/*like the padidng, color ect..*/
.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: black;
  color: white;
  padding: 20px;
}    

/*This was referenced in the relative paths created in my index.html file*/
.brand-title {
  font-size: 1.5rem;
  margin: .5rem;
}

/*Editing the nav bar link boxes*/
.navbar-links ul {
  margin: 0;
  padding: 0;
  display: flex;
}

/*Removing the default list style for the nav bar so there is no underline or dots beside the text*/
.navbar-links li {
  list-style: none;
}

/*editing the nav bar link anchor tags text*/
.navbar-links li a {
    text-decoration: none;
    color: white;
    padding: 1rem;
    display: block;
}
 
/*Changes the background colour of the navbar link when the cursor hovers over it. I changed mine to pink because pink is one of Gemini colours*/
.navbar-links li:hover {
    background-color: pink;
}

/*Styling the toggle button for when screen size is smaller. I had trouble getting this function to work*/
.toggle-button {
    position: absolute;
    top: .75rem;
    right: 1rem;
    dispay: none;
    flex-direction: column;
    justify-content: space-between;
    width: 30px;
    height: 21px;
}

/*styling the toggle button bars*/
.toggle-button .bar {
    height: 3px;
    width: 100%;
    background-color: white;
    border-radius: 10px;
}

/*responsive media query to make the hamburger toggle button appear when screen size is below 500px*/
@media (max-width: 500px {
    .toggle {
        display: flex;
   }
    /*makes navbar links disapear when media query runs*/
    .navbar-links {
    	display: none;
   }
    /*change the flex direction to column so that when the media query runs the nav bar options that turn to a hamburger menu become stacked in a column*/
    .navbar {
    	flex-direction: column;
        align-items: flex-start;
    }
    /*makes the nav bar links spread 100% of element width*/
    .navbar-links ul {
    	width: 100%;
      flex-direction: column;
    }
    /*centers the nav bar links*/
    .navbarlinks li {
    	text-align: center;
    }
    /*select the anchor tags with padding to spread them out less when media query is run*/
    .navbar-links li a {
    	padding: .5rem 1rem;
    }
    /*when this media query is active, it will continue to be a responsive display*/
    .navbar-links.active {
    	display: flex;
    }
}

/* Create the image gallery*/
div.gallery {
  margin: 30px;
  border: 1px solid #ccc;
  width: 500px;
}
/*create the cursor hover for images, this didnt seem to work*/
div.gallery:hover {
  border: 1px solid #B1E9F4;
}

/*set the image width*/
div.gallery img {
  width: 100%;
  height: auto;
}

/*define the text box for the description under the picture, this worked but I wasnt able to seperate the images from the bottom of the prior text description*/
div.desc {
  padding: 15px;
  text-align: center;
  color: white;
  margin: 15px;
}

/*create the responsive setting for image resizing, this again wouldnt work and the images don't resize, i sourced this from w3 schools and couldnt figure out*/
/*why my images wouldnt work*/
.responsive {
  padding: 60px 60px;
  float: left;
  width: 50%;
}

/* media queries for the image resizing, seemed to be under 500px where the issue happened even tho the max widths were set*/
@media only screen and (max-width: 900px) {
  .responsive {
    margin: 6px 0;
    display: flex;
  }
}

@media only screen and (max-width: 500px) {
  .responsive {
    display: flex;
  }
}
/* clears the previous query when it is no longer valid*/
.clearfix:after {
  content: "";
  display: table;
  clear: both;
 </style>
 </head>
<body>
